/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package mayton.newral.io;

/**
 *
 * @author mayton
 */


import mayton.newral.Perceptron;

import java.io.*;
import java.util.Hashtable;

import org.apache.log4j.Logger;


public class CodepageDetectorStreamReader  {

    InputStream is;

    Perceptron perc;

    Logger logger = Logger.getLogger("ua.dn.mayton.io.CodepageDetectorStreamReader");

    String[] codepages={"windows-1251","cp866"};
    int[] freq=new int [256];

   double[] win1251_freq={
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.01801,   0.00000,   0.00000,   0.01801,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.19915,   0.00140,   0.00120,   0.00000,   0.00000,   0.00001,   0.00000,   0.00000,
   0.00005,   0.00005,   0.00000,   0.00000,   0.01496,   0.00727,   0.02346,   0.00000,
   0.00002,   0.00005,   0.00008,   0.00009,   0.00008,   0.00003,   0.00007,   0.00003,
   0.00003,   0.00003,   0.00152,   0.00005,   0.00000,   0.00000,   0.00000,   0.00160,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00003,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00045,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00173,   0.00035,   0.00134,   0.00205,   0.00310,   0.00041,   0.00010,   0.00059,
   0.00103,   0.00002,   0.00083,   0.00052,   0.00063,   0.00220,   0.00177,   0.00172,
   0.00087,   0.00129,   0.00285,   0.00047,   0.00026,   0.00010,   0.00003,   0.00039,
   0.00007,   0.00001,   0.00000,   0.00003,   0.00004,   0.00042,   0.00000,   0.00055,
   0.05373,   0.01051,   0.02792,   0.01157,   0.01877,   0.05721,   0.00769,   0.01185,
   0.04837,   0.00850,   0.02186,   0.03969,   0.02178,   0.04565,   0.07438,   0.01921,
   0.03529,   0.03536,   0.04026,   0.02085,   0.00069,   0.00603,   0.00224,   0.00939,
   0.00590,   0.00286,   0.00015,   0.01585,   0.01224,   0.00246,   0.00393,   0.01430
   };


    double[] cp866_freq={
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.01801,   0.00000,   0.00000,   0.01801,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.19915,   0.00140,   0.00120,   0.00000,   0.00000,   0.00001,   0.00000,   0.00000,
   0.00005,   0.00005,   0.00000,   0.00000,   0.01496,   0.00727,   0.02346,   0.00000,
   0.00002,   0.00005,   0.00008,   0.00009,   0.00008,   0.00003,   0.00007,   0.00003,
   0.00003,   0.00003,   0.00152,   0.00005,   0.00000,   0.00000,   0.00000,   0.00160,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00003,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00045,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00173,   0.00035,   0.00134,   0.00205,   0.00310,   0.00041,   0.00010,   0.00059,
   0.00103,   0.00002,   0.00083,   0.00052,   0.00063,   0.00220,   0.00177,   0.00172,
   0.00087,   0.00129,   0.00285,   0.00047,   0.00026,   0.00010,   0.00003,   0.00039,
   0.00007,   0.00001,   0.00000,   0.00003,   0.00004,   0.00042,   0.00000,   0.00055,
   0.05373,   0.01051,   0.02792,   0.01157,   0.01877,   0.05721,   0.00769,   0.01185,
   0.04837,   0.00850,   0.02186,   0.03969,   0.02178,   0.04565,   0.07438,   0.01921,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.03529,   0.03536,   0.04026,   0.02085,   0.00069,   0.00603,   0.00224,   0.00939,
   0.00590,   0.00286,   0.00015,   0.01585,   0.01224,   0.00246,   0.00393,   0.01430,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,
   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000,   0.00000
    };


    protected double getDepth(double[] k)
    {
        double sum=0.0;
        for(int i=0;i<256;i++) sum+=(k[i]*freq[i]);
        return sum;
    }

    public String getCodepage()
    {
        double sum1=getDepth(win1251_freq);
        //logger.debug("getDepth(win1251_freq)="+sum1);
        double sum2=getDepth(cp866_freq);
        //logger.debug("getDepth(cp866_freq)="+sum2);
        if (sum1>sum2) return "windows-1251";
        return "cp866";
    }

    public void process()
    {

    }

    public CodepageDetectorStreamReader(InputStream is) throws IOException
    {
        assert(is!=null);
        this.is=is;

        byte[] buf=new byte[4096];
        int res;
        int index;
        while((res=is.read(buf))>0)
        {
            for(int i=0;i<res;i++) {
                index=buf[i]<0?buf[i]+256:buf[i];
                freq[index]++;
            }
        }
        //for(int i=0;i<256;i++) logger.debug("a["+i+"]="+freq[i]);

        is.close();
    }







    public void close() throws IOException {
        is.close();
    }
}

