plugins {
    id 'java'
    id 'application'
}

group 'mayton.probe'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    // The core reader and writer for ORC files. Uses the vectorized
    // column batch for the in memory representation.
    compile group: 'org.apache.orc', name: 'orc-core', version: '1.6.2'
    // An implementation of Hadoop's mapred and mapreduce input and output
    // formats for ORC files. They use the core reader and writer, but
    // present the data to the user in Writable objects.
    compile group: 'org.apache.orc', name: 'orc-mapreduce', version: '1.6.2'
    // Tools
    compile group: 'org.apache.orc', name: 'orc-tools', version: '1.6.2'

    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.7'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    compile group: 'org.jetbrains', name: 'annotations', version: '17.0.0'


}

task(omsk2orc, dependsOn: 'classes', type: JavaExec) {
    main = 'probe.mayton.orc.OmskToOrc'
    classpath = sourceSets.main.runtimeClasspath
}

task(maxMind2orc, dependsOn: 'classes', type: JavaExec) {
    main = 'probe.mayton.orc.MaxMindCsvToOrc'
    classpath = sourceSets.main.runtimeClasspath
}