plugins {
    id 'java'
    id 'application'
}

group 'mayton.probe.ignite'
version '1.0-SNAPSHOT'

sourceCompatibility = 8

repositories {
    mavenCentral()
}

application {
    mainClassName = 'mayton.probe.ignite.App'
}

ext {
    igniteVersion = '2.7.0'
}



dependencies {    

    compile "org.apache.ignite:ignite-core:${igniteVersion}"
    compile "org.apache.ignite:ignite-spring:${igniteVersion}"
    compile "org.apache.ignite:ignite-indexing:${igniteVersion}"

    //compile group: 'org.apache.ignite', name: 'ignite-zookeeper', version: '2.7.5'
    //compile group: 'org.apache.ignite', name: 'ignite-tools', version: '2.7.5'
    //compile group: 'org.apache.ignite', name: 'ignite-kafka', version: '2.7.5'
    //compile group: 'org.apache.ignite', name: 'ignite-storm', version: '2.7.5'

    compile group: 'com.esotericsoftware', name: 'kryo', version: '4.0.2'

    compile group: 'org.apache.ignite', name: 'ignite-visor-console_2.10', version: '2.7.5'
    compile group: 'org.apache.ignite', name: 'ignite-visor-plugins', version: '2.7.5'

    compile group: 'org.apache.ignite', name: 'ignite-ml', version: '2.7.5'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task(TestStartClient, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.TestStartClient'
    classpath = sourceSets.main.runtimeClasspath
}

task(TestClientConfig, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.TestClientConfig'
    classpath = sourceSets.main.runtimeClasspath
}

task(TestJDBC, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.TestJDBC'
    classpath = sourceSets.main.runtimeClasspath
}

task(TestBroadCastClusterGroup, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.TestBroadCastClusterGroup'
    classpath = sourceSets.main.runtimeClasspath
}

task(Benchmark, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.Benchmark'
    classpath = sourceSets.main.runtimeClasspath
}

task(BenchmarkDataStreamer, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.BenchmarkDataStreamer'
    classpath = sourceSets.main.runtimeClasspath
}

task(ProbeKryo, dependsOn: 'classes', type: JavaExec) {
    main = 'mayton.probe.ignite.TestKryo'
    classpath = sourceSets.main.runtimeClasspath
}


task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.runtime
}



